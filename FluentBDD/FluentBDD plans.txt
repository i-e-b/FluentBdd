Fluent BDD

TO DO:
 - Tests to cover all SmartAssertion cases.
 - Rework slideshow so the separation and composition ideas are more clear, and show a little better what this means in code.

TO CONSIDER:
 - Wrap all low-level assertions around an interface, and do the NUnit Assert calls in the NUnit extension; remove NUnit dependencies from FluentBDD core.
 - Change tree to be a real pure tree structure. Tests in leafs only. Feature leafs should be list of coverage types.
 - Make a link between Features and their behaviours, extending and cleaning up TestClosure{}
 - Try to do the neat indexer naming trick on expected values as done with actual values in SmartAssertions